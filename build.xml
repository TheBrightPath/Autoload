<project name="Autoload" default="build" basedir=".">

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/phar/_tmp" />

        <delete>
            <fileset dir="${basedir}/build/phar">
                <include name="**/*.phar" />
            </fileset>
        </delete>

        <mkdir dir="${basedir}/build/logs"/>
    </target>

    <target name="lint">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}/src">
                <include name="**/*.php" />
                <modified />
            </fileset>

        </apply>
    </target>

    <target name="getphive" description="Get phive on travis-ci">
        <exec executable="wget" taskname="wget">
            <arg value="https://phar.io/releases/phive.phar"/>
        </exec>
        <exec executable="wget" taskname="wget">
            <arg value="https://phar.io/releases/phive.phar.asc"/>
        </exec>
        <exec executable="gpg" taskname="gpg-get-key">
            <arg line="--keyserver hkps.pool.sks-keyservers.net --recv-keys 0x9D8A98B29B2D5D79" />
        </exec>
        <exec executable="gpg" taskname="gpg-verify">
            <arg line="--verify phive.phar.asc phive.phar" />
        </exec>
        <chmod file="phive.phar" perm="+x" />
        <delete file="phive.phar.asc" />
    </target>

    <target name="install-tools" description="Install tools with Phive">
        <exec executable="${phive.bin}" taskname="phive">
            <arg value="install"/>
            <arg value="--copy" />
            <arg value="--trust-gpg-keys" />
            <!--        phpab,           phpunit,         phpstan,         psaml,           php-cs-fixer     -->
            <arg value="4AA394086372C20A,2A8299CE842DD38C,CF1A108D0E7AE720,8A03EA3B385DBAA1,E82B2FB314E9906E" />
        </exec>
    </target>


    <!-- Run unit tests and generate junit.xml and clover.xml -->
    <target name="phpunit">
        <exec executable="${basedir}/tools/phpunit" failonerror="true"/>
    </target>

    <target name="phpab" description="Generate autoloader scripts">
        <exec executable="${basedir}/phpab.php">
            <arg value="--output"/>
            <arg path="src/autoload.php"/>
            <arg value="--basedir"/>
            <arg path="src"/>
            <arg path="composer.json"/>
        </exec>
    </target>

    <target name="phar" description="Create PHAR archive of Autoload Builder and its dependencies">

        <delete dir="${basedir}/build/phar/_tmp"/>
        <mkdir dir="${basedir}/build/phar/_tmp"/>

        <delete>
            <fileset dir="${basedir}/build/phar">
                <include name="**/*.phar" />
            </fileset>
        </delete>

        <exec executable="bash" outputproperty="version">
            <arg value="-c" />
            <arg value="git describe --tags --dirty" />
        </exec>

        <copy todir="${basedir}/build/phar/_tmp/vendor">
            <fileset dir="${basedir}/vendor">
                <include name="theseer/directoryscanner/src/**" />
                <include name="zetacomponents/console-tools/src/**" />
                <include name="zetacomponents/base/src/**" />
            </fileset>
        </copy>

        <copy todir="${basedir}/build/phar/_tmp/phpab">
            <fileset dir="${basedir}/src"/>
        </copy>

        <delete>
            <fileset dir="${basedir}/build/phar/_tmp">
                <include name="**/autoload.php"/>
                <include name="**/Autoload.php"/>
                <include name="**/Autoload.php.in"/>
                <include name="**/package.sig"/>
                <include name="**/package.xml"/>
                <include name="**/composer.json"/>
                <include name="**/*.md"/>
                <include name="**/docs/**"/>
                <include name="**/design/**"/>
                <include name="**/grammar/**"/>
            </fileset>
        </delete>

        <exec executable="${basedir}/phpab.php" failonerror="true">
            <arg value="--var" />
            <arg value="VERSION=${version}" />
            <arg value="--all" />
            <arg value="--alias" />
            <arg value="phpab.phar" />
            <arg value="--phar" />
            <arg value="--gzip" />
            <arg value="--output" />
            <arg path="${basedir}/build/phar/phpab-${version}.phar" />
            <arg value="--template" />
            <arg path="${basedir}/build/phar/autoload.php.in" />
            <arg path="${basedir}/build/phar/_tmp" />
        </exec>

        <chmod file="${basedir}/build/phar/phpab-${version}.phar" perm="ugo+rx"/>
        <delete dir="${basedir}/build/phar/_tmp" />
    </target>

    <target name="release" description="Make a release based on latest tag">

        <exec executable="bash" outputproperty="version">
            <arg value="-c"/>
            <arg value="${basedir}/build/phar/phpab*.phar --version | awk 'BEGIN { ORS = &quot;&quot;; } {print $2}'"/>
        </exec>

        <exec executable="gpg">
            <arg value="--local-user" />
            <arg value="arne@blankerts.de" />
            <arg value="--detach-sign" />
            <arg value="--armor" />
            <arg value="--output" />
            <arg path="${basedir}/build/phar/phpab-${version}.phar.asc" />
            <arg path="${basedir}/build/phar/phpab-${version}.phar" />
        </exec>

    </target>

    <target name="build" depends="clean,lint,phpunit"/>
</project>
